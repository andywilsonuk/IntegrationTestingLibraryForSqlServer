// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace IntegrationTestingLibraryForSqlServer.IntegrationTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ViewFeature : Xunit.IClassFixture<ViewFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "View.feature"
#line hidden
        
        public ViewFeature(ViewFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "View", "\tView setup and populate functions", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="View setup and verify")]
        [Xunit.TraitAttribute("FeatureTitle", "View")]
        [Xunit.TraitAttribute("Description", "View setup and verify")]
        [Xunit.TraitAttribute("Category", "db")]
        public virtual void ViewSetupAndVerify()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View setup and verify", new string[] {
                        "db"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("there is a test database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Data Type",
                        "Size",
                        "Decimal Places",
                        "Allow Nulls"});
            table1.AddRow(new string[] {
                        "Id",
                        "int",
                        "",
                        "",
                        "false"});
            table1.AddRow(new string[] {
                        "Name",
                        "nvarchar",
                        "50",
                        "",
                        "true"});
            table1.AddRow(new string[] {
                        "Decimal1",
                        "decimal",
                        "10",
                        "5",
                        "true"});
#line 7
 testRunner.When("the table-backed view \"test\" is created", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Data Type",
                        "Size",
                        "Decimal Places",
                        "Allow Nulls"});
            table2.AddRow(new string[] {
                        "Id",
                        "int",
                        "",
                        "",
                        "false"});
            table2.AddRow(new string[] {
                        "Name",
                        "nvarchar",
                        "50",
                        "",
                        "true"});
            table2.AddRow(new string[] {
                        "Decimal1",
                        "decimal",
                        "10",
                        "5",
                        "true"});
#line 12
 testRunner.Then("the definition of view \"test\" should match", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Data Type",
                        "Size",
                        "Decimal Places",
                        "Allow Nulls"});
            table3.AddRow(new string[] {
                        "Id",
                        "int",
                        "",
                        "",
                        "false"});
            table3.AddRow(new string[] {
                        "Name",
                        "nvarchar",
                        "50",
                        "",
                        "true"});
            table3.AddRow(new string[] {
                        "Decimal1",
                        "decimal",
                        "10",
                        "5",
                        "true"});
#line 17
 testRunner.And("the definition of view \"test\" should match SystemTables definition", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ViewFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ViewFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
